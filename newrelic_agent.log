{"name":"newrelic","hostname":"hakimu-mbp","pid":9394,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T20:59:03.052Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9394,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T20:59:04.594Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9394,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497372925.","time":"2014-09-25T20:59:04.595Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9413,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:06:15.556Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9416,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:06:33.157Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9416,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:06:34.025Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9416,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497387559.","time":"2014-09-25T21:06:34.025Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9421,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:08:01.939Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9421,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:08:02.803Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9421,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497390172.","time":"2014-09-25T21:08:02.803Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9436,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:11:18.647Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9436,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:11:19.502Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9436,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497396559.","time":"2014-09-25T21:11:19.502Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9437,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:12:36.613Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9437,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:12:37.649Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9437,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497398788.","time":"2014-09-25T21:12:37.650Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9443,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:14:31.527Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9443,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:14:32.360Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9443,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497402028.","time":"2014-09-25T21:14:32.361Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9444,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:15:11.170Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9444,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:15:12.039Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9444,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497403401.","time":"2014-09-25T21:15:12.042Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9452,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:18:57.465Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9452,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:18:58.317Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9452,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497410113.","time":"2014-09-25T21:18:58.318Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9462,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:20:35.531Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9462,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:20:36.796Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9462,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497413322.","time":"2014-09-25T21:20:36.797Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9470,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:23:08.046Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9471,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:23:38.210Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9476,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:25:22.966Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9483,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:26:55.240Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9719,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:30:33.250Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9734,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:32:23.469Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9736,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:32:34.068Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9753,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T21:36:21.012Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9753,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T21:36:21.860Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9753,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497440293.","time":"2014-09-25T21:36:21.861Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9878,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T22:01:41.051Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9878,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T22:01:41.919Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9878,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497485848.","time":"2014-09-25T22:01:41.919Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9983,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T22:29:52.756Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9983,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T22:29:53.635Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":9983,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497535103.","time":"2014-09-25T22:29:53.636Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10026,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T22:49:54.976Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10026,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T22:49:56.414Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10026,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497569078.","time":"2014-09-25T22:49:56.415Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10046,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-25T22:57:12.915Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10046,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-25T22:57:13.777Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10046,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497581252.","time":"2014-09-25T22:57:13.778Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10507,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T00:43:03.578Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10507,"component":"collector_api","level":40,"msg":"No connection has been established to New Relic after 4 attempts.","time":"2014-09-26T00:44:03.877Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10507,"level":50,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"New Relic for Node.js halted startup due to an error:","time":"2014-09-26T00:47:04.712Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10535,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T01:04:28.916Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10641,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T03:21:35.909Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10641,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T03:21:37.034Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10641,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1497995604.","time":"2014-09-26T03:21:37.034Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10661,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T03:32:16.892Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10661,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T03:32:17.776Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10661,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498011528.","time":"2014-09-26T03:32:17.776Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10957,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:15:37.627Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10957,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:15:38.504Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10957,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498079713.","time":"2014-09-26T04:15:38.505Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10959,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:15:58.787Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10959,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:15:59.664Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":10959,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498080361.","time":"2014-09-26T04:15:59.665Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11011,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:20:44.449Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11011,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:20:45.366Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11011,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498088167.","time":"2014-09-26T04:20:45.367Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11017,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:22:15.506Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11017,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:22:16.413Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11017,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498090420.","time":"2014-09-26T04:22:16.414Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11022,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:24:00.555Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11022,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:24:01.418Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11022,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498092779.","time":"2014-09-26T04:24:01.419Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11105,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:45:56.823Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11112,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:50:19.878Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11113,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:50:41.524Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11116,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:51:27.770Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11116,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:51:28.660Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11116,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498134993.","time":"2014-09-26T04:51:28.660Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11122,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:52:24.062Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11122,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:52:24.919Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11122,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498136380.","time":"2014-09-26T04:52:24.919Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11124,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:52:42.733Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11124,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:52:43.633Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11124,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498136776.","time":"2014-09-26T04:52:43.634Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11129,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:53:33.786Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11129,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:53:34.758Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11129,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498137947.","time":"2014-09-26T04:53:34.759Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11140,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:57:19.202Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11140,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:57:20.061Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11140,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498143563.","time":"2014-09-26T04:57:20.062Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11146,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T04:58:59.037Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11146,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T04:58:59.910Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11146,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498145779.","time":"2014-09-26T04:58:59.910Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11150,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T05:01:04.991Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11150,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T05:01:05.878Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11150,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498150044.","time":"2014-09-26T05:01:05.879Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11172,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T05:12:44.495Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11175,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T05:12:54.988Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11175,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T05:12:55.871Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11175,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1498167366.","time":"2014-09-26T05:12:55.872Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11175,"component":"collector_api","level":50,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"Calling metric_data on New Relic failed unexpectedly. Data will be held until it can be submitted:","time":"2014-09-26T06:59:29.440Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11175,"level":30,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"Error on submission to New Relic (data held for redelivery):","time":"2014-09-26T06:59:29.440Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11175,"component":"collector_api","level":50,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"Calling metric_data on New Relic failed unexpectedly. Data will be held until it can be submitted:","time":"2014-09-26T14:51:22.641Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11175,"level":30,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"Error on submission to New Relic (data held for redelivery):","time":"2014-09-26T14:51:22.642Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11495,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T15:01:17.516Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11498,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T15:02:16.162Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11509,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T15:08:16.972Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11509,"component":"collector_api","level":40,"msg":"No connection has been established to New Relic after 4 attempts.","time":"2014-09-26T15:09:17.222Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11513,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T15:11:07.514Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11514,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T15:11:34.827Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11514,"component":"collector_api","level":40,"msg":"No connection has been established to New Relic after 4 attempts.","time":"2014-09-26T15:12:35.492Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":11514,"level":50,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"New Relic for Node.js halted startup due to an error:","time":"2014-09-26T15:15:36.325Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":10,"msg":"Using New Relic for Node.js version 1.11.2.","time":"2014-09-26T16:55:33.083Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Process was running 0 seconds before agent was loaded.","time":"2014-09-26T16:55:33.084Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Current working directory at module load is /Users/hakimu/Documents/scribble/node_express_mongo.","time":"2014-09-26T16:55:33.084Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Process title is node.","time":"2014-09-26T16:55:33.084Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Application was invoked as node /Users/hakimu/Documents/scribble/node_express_mongo/server.js.","time":"2014-09-26T16:55:33.084Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Using configuration file /Users/hakimu/Documents/scribble/node_express_mongo/newrelic.js.","time":"2014-09-26T16:55:33.085Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T16:55:33.177Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Wrapping module loader.","time":"2014-09-26T16:55:33.208Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented Module._load.","time":"2014-09-26T16:55:33.208Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.createServer.","time":"2014-09-26T16:55:33.214Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.Server.prototype.on.","time":"2014-09-26T16:55:33.214Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.Server.prototype.addListener.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.request.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.Client.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.createClient.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.createServer.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.Server.prototype.on.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.Server.prototype.addListener.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented http.request.","time":"2014-09-26T16:55:33.215Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"http.Client not defined, so not wrapping.","time":"2014-09-26T16:55:33.216Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"http.createClient not defined, so not wrapping.","time":"2014-09-26T16:55:33.216Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Agent state changed from stopped to starting.","time":"2014-09-26T16:55:33.220Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-26T16:55:33.221Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling get_redirect_host on collector API with: []","time":"2014-09-26T16:55:33.222Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[]","msg":"Posting to https://collector.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=get_redirect_host","time":"2014-09-26T16:55:33.222Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.298Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.328Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Cursor.prototype.toArray.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Cursor.prototype.each.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Cursor.prototype.nextObject.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Cursor.prototype.close.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.findOne.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.insert.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.remove.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.save.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.update.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.distinct.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.count.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.findAndModify.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.findAndRemove.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.createIndex.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.ensureIndex.","time":"2014-09-26T16:55:33.329Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.dropIndex.","time":"2014-09-26T16:55:33.330Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.dropAllIndexes.","time":"2014-09-26T16:55:33.330Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented mongodb.Collection.prototype.reIndex.","time":"2014-09-26T16:55:33.330Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.toArray already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.each already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.nextObject already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.close already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findOne already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.insert already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.remove already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.save already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.update already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.distinct already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.count already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndModify already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndRemove already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.createIndex already wrapped by agent.","time":"2014-09-26T16:55:33.332Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.ensureIndex already wrapped by agent.","time":"2014-09-26T16:55:33.333Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropIndex already wrapped by agent.","time":"2014-09-26T16:55:33.333Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropAllIndexes already wrapped by agent.","time":"2014-09-26T16:55:33.333Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.reIndex already wrapped by agent.","time":"2014-09-26T16:55:33.333Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.toArray already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.each already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.nextObject already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.close already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findOne already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.insert already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.remove already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.save already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.update already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.distinct already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.count already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndModify already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndRemove already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.createIndex already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.ensureIndex already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropIndex already wrapped by agent.","time":"2014-09-26T16:55:33.365Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropAllIndexes already wrapped by agent.","time":"2014-09-26T16:55:33.366Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.reIndex already wrapped by agent.","time":"2014-09-26T16:55:33.366Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.toArray already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.each already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.nextObject already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.close already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findOne already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.insert already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.remove already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.save already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.update already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.distinct already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.count already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndModify already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndRemove already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.createIndex already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.ensureIndex already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropIndex already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropAllIndexes already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.reIndex already wrapped by agent.","time":"2014-09-26T16:55:33.378Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.toArray already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.each already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.nextObject already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.close already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findOne already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.insert already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.remove already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.save already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.update already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.distinct already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.count already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndModify already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndRemove already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.createIndex already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.ensureIndex already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropIndex already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropAllIndexes already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.reIndex already wrapped by agent.","time":"2014-09-26T16:55:33.385Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.390Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.toArray already wrapped by agent.","time":"2014-09-26T16:55:33.390Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.each already wrapped by agent.","time":"2014-09-26T16:55:33.391Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.nextObject already wrapped by agent.","time":"2014-09-26T16:55:33.391Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.close already wrapped by agent.","time":"2014-09-26T16:55:33.392Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findOne already wrapped by agent.","time":"2014-09-26T16:55:33.392Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.insert already wrapped by agent.","time":"2014-09-26T16:55:33.392Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.remove already wrapped by agent.","time":"2014-09-26T16:55:33.392Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.save already wrapped by agent.","time":"2014-09-26T16:55:33.392Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.update already wrapped by agent.","time":"2014-09-26T16:55:33.392Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.distinct already wrapped by agent.","time":"2014-09-26T16:55:33.392Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.count already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndModify already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndRemove already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.createIndex already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.ensureIndex already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropIndex already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropAllIndexes already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.reIndex already wrapped by agent.","time":"2014-09-26T16:55:33.394Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.toArray already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.each already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.nextObject already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.close already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findOne already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.insert already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.remove already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.save already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.update already wrapped by agent.","time":"2014-09-26T16:55:33.397Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.distinct already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.count already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndModify already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndRemove already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.createIndex already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.ensureIndex already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropIndex already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropAllIndexes already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.reIndex already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting mongodb.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.toArray already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.each already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.nextObject already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Cursor.prototype.close already wrapped by agent.","time":"2014-09-26T16:55:33.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findOne already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.insert already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.remove already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.save already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.update already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.distinct already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.count already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndModify already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.findAndRemove already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.createIndex already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.ensureIndex already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropIndex already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.dropAllIndexes already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"mongodb.Collection.prototype.reIndex already wrapped by agent.","time":"2014-09-26T16:55:33.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting express.","time":"2014-09-26T16:55:33.478Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented express.application.init.","time":"2014-09-26T16:55:33.480Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented express.response.render.","time":"2014-09-26T16:55:33.480Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented express.Router.process_params.","time":"2014-09-26T16:55:33.480Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented express.Router.use.","time":"2014-09-26T16:55:33.480Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumented express.Router.route.","time":"2014-09-26T16:55:33.480Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":10,"msg":"Instrumenting express.","time":"2014-09-26T16:55:33.480Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"express.application.init already wrapped by agent.","time":"2014-09-26T16:55:33.481Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"express.response.render already wrapped by agent.","time":"2014-09-26T16:55:33.481Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"express.Router.process_params already wrapped by agent.","time":"2014-09-26T16:55:33.481Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"express.Router.use already wrapped by agent.","time":"2014-09-26T16:55:33.481Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"shimmer","level":20,"msg":"express.Router.route already wrapped by agent.","time":"2014-09-26T16:55:33.481Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for get_redirect_host.","time":"2014-09-26T16:55:34.482Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":"collector-111.newrelic.com"},"msg":"Deserialized from collector:","time":"2014-09-26T16:55:34.482Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"collector_api","level":20,"msg":"Requesting this account's collector from collector.newrelic.com returned collector-111.newrelic.com; reconfiguring.","time":"2014-09-26T16:55:34.483Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling connect on collector API with: [{\"pid\":12965,\"host\":\"hakimu-mbp\",\"language\":\"nodejs\",\"app_name\":[\"Node_Express_Mongo API\"],\"agent_version\":\"1.11.2\",\"environment\":[[\"Framework\",\"express\"],[\"Dispatcher\",\"express\"],[\"Dispatcher\",\"http\"],[\"Processors\",8],[\"OS\",\"Darwin\"],[\"OS version\",\"13.1.0\"],[\"Node.js version\",\"v0.10.28\"],[\"Architecture\",\"x64\"],[\"npm installed?\",\"no\"],[\"Dynamically linked to OpenSSL?\",\"no\"],[\"Dynamically linked to V8?\",\"no\"],[\"Dynamically linked to Zlib?\",\"no\"],[\"DTrace support?\",\"yes\"],[\"Event Tracing for Windows (ETW) support?\",\"no\"],[\"OpenSSL support?\",\"yes\"],[\"Packages\",[\"[\\\"bl\\\",\\\"0.8.0\\\"]\",\"[\\\"body-parser\\\",\\\"1.0.2\\\"]\",\"[\\\"bunyan\\\",\\\"1.0.0\\\"]\",\"[\\\"express\\\",\\\"4.0.0, 4.3.0\\\"]\",\"[\\\"jade\\\",\\\"1.3.1\\\"]\",\"[\\\"mongodb\\\",\\\"1.4.9\\\"]\",\"[\\\"mongojs\\\",\\\"0.14.1\\\"]\",\"[\\\"mongoose\\\",\\\"3.6.20\\\"]\",\"[\\\"newrelic\\\",\\\"1.11.2, 1.2.0\\\"]\",\"[\\\"through2-map\\\",\\\"1.2.1\\\"]\",\"[\\\"undefined\\\",\\\"\\\"]\"]],[\"Dependencies\",[\"[\\\"accepts\\\",\\\"1.0.0, 1.0.1\\\"]\",\"[\\\"amdefine\\\",\\\"0.1.0\\\"]\",\"[\\\"async\\\",\\\"0.2.10\\\"]\",\"[\\\"async-listener\\\",\\\"0.4.7, 0.4.5\\\"]\",\"[\\\"bson\\\",\\\"0.2.2, 0.2.12\\\"]\",\"[\\\"buffer-crc32\\\",\\\"0.2.1\\\"]\",\"[\\\"bunyan\\\",\\\"0.14.6\\\"]\",\"[\\\"bytes\\\",\\\"1.0.0\\\"]\",\"[\\\"character-parser\\\",\\\"1.2.0\\\"]\",\"[\\\"commander\\\",\\\"2.1.0\\\"]\",\"[\\\"constantinople\\\",\\\"2.0.0\\\"]\",\"[\\\"continuation-local-storage\\\",\\\"3.1.1, 2.6.2\\\"]\",\"[\\\"cookie\\\",\\\"0.1.0, 0.1.2\\\"]\",\"[\\\"cookie-signature\\\",\\\"1.0.3\\\"]\",\"[\\\"core-util-is\\\",\\\"1.0.1\\\"]\",\"[\\\"css\\\",\\\"1.0.8\\\"]\",\"[\\\"css-parse\\\",\\\"1.0.4\\\"]\",\"[\\\"css-stringify\\\",\\\"1.0.5\\\"]\",\"[\\\"debug\\\",\\\"0.8.1, 0.8.0\\\"]\",\"[\\\"emitter-listener\\\",\\\"1.0.1\\\"]\",\"[\\\"escape-html\\\",\\\"1.0.1\\\"]\",\"[\\\"fresh\\\",\\\"0.2.2, 0.2.0\\\"]\",\"[\\\"hooks\\\",\\\"0.2.1\\\"]\",\"[\\\"inherits\\\",\\\"2.0.1\\\"]\",\"[\\\"ipaddr.js\\\",\\\"0.1.2\\\"]\",\"[\\\"is-promise\\\",\\\"1.0.0\\\"]\",\"[\\\"isarray\\\",\\\"0.0.1\\\"]\",\"[\\\"kerberos\\\",\\\"0.0.3\\\"]\",\"[\\\"lru-cache\\\",\\\"2.5.0\\\"]\",\"[\\\"merge-descriptors\\\",\\\"0.0.2\\\"]\",\"[\\\"methods\\\",\\\"0.1.0, 1.0.0\\\"]\",\"[\\\"mime\\\",\\\"1.2.11\\\"]\",\"[\\\"minimatch\\\",\\\"0.2.14\\\"]\",\"[\\\"minimist\\\",\\\"0.0.8\\\"]\",\"[\\\"mkdirp\\\",\\\"0.5.0, 0.3.5\\\"]\",\"[\\\"mongodb\\\",\\\"1.3.19, 1.4.9\\\"]\",\"[\\\"monocle\\\",\\\"1.1.51\\\"]\",\"[\\\"mpath\\\",\\\"0.1.1\\\"]\",\"[\\\"mpromise\\\",\\\"0.2.1\\\"]\",\"[\\\"ms\\\",\\\"0.1.0\\\"]\",\"[\\\"muri\\\",\\\"0.3.1\\\"]\",\"[\\\"mv\\\",\\\"2.0.3\\\"]\",\"[\\\"nan\\\",\\\"1.2.0\\\"]\",\"[\\\"ncp\\\",\\\"0.6.0\\\"]\",\"[\\\"negotiator\\\",\\\"0.3.0, 0.4.3\\\"]\",\"[\\\"object-keys\\\",\\\"0.4.0\\\"]\",\"[\\\"optimist\\\",\\\"0.3.7\\\"]\",\"[\\\"parseurl\\\",\\\"1.0.1\\\"]\",\"[\\\"path-to-regexp\\\",\\\"0.1.2\\\"]\",\"[\\\"promise\\\",\\\"2.0.0\\\"]\",\"[\\\"proxy-addr\\\",\\\"1.0.0\\\"]\",\"[\\\"proxying-agent\\\",\\\"0.1.5\\\"]\",\"[\\\"qs\\\",\\\"0.6.6\\\"]\",\"[\\\"range-parser\\\",\\\"1.0.0, 0.0.4\\\"]\",\"[\\\"raw-body\\\",\\\"1.1.7\\\"]\",\"[\\\"readable-stream\\\",\\\"1.0.26-4, 1.0.31, 1.1.13, 1.1.12\\\"]\",\"[\\\"readdirp\\\",\\\"0.2.5\\\"]\",\"[\\\"regexp-clone\\\",\\\"0.0.1\\\"]\",\"[\\\"rimraf\\\",\\\"2.2.8\\\"]\",\"[\\\"send\\\",\\\"0.2.0, 0.1.4, 0.3.0\\\"]\",\"[\\\"serve-static\\\",\\\"1.0.1, 1.1.0\\\"]\",\"[\\\"shimmer\\\",\\\"1.0.0\\\"]\",\"[\\\"sigmund\\\",\\\"1.0.0\\\"]\",\"[\\\"sliced\\\",\\\"0.0.5, 0.0.4\\\"]\",\"[\\\"source-map\\\",\\\"0.1.33\\\"]\",\"[\\\"string_decoder\\\",\\\"0.10.31, 0.10.25-1\\\"]\",\"[\\\"terminus\\\",\\\"1.0.9\\\"]\",\"[\\\"through2\\\",\\\"0.2.3\\\"]\",\"[\\\"thunky\\\",\\\"0.1.0\\\"]\",\"[\\\"transformers\\\",\\\"2.1.0\\\"]\",\"[\\\"type-is\\\",\\\"1.1.0, 1.0.0, 1.2.0\\\"]\",\"[\\\"uglify-js\\\",\\\"2.4.13, 2.2.5\\\"]\",\"[\\\"uglify-to-browserify\\\",\\\"1.0.2\\\"]\",\"[\\\"undefined\\\",\\\"\\\"]\",\"[\\\"utils-merge\\\",\\\"1.0.0\\\"]\",\"[\\\"with\\\",\\\"3.0.0\\\"]\",\"[\\\"wordwrap\\\",\\\"0.0.2\\\"]\",\"[\\\"xtend\\\",\\\"2.1.2\\\"]\",\"[\\\"yakaa\\\",\\\"1.0.0\\\"]\"]]],\"settings\":{\"domain\":null,\"_maxListeners\":10,\"app_name.0\":\"Node_Express_Mongo API\",\"license_key\":\"388a69ff95a524d34e15f43d3c34d384457054fb\",\"host\":\"collector-111.newrelic.com\",\"port\":443,\"ssl\":true,\"proxy\":\"****\",\"proxy_host\":\"\",\"proxy_port\":\"\",\"proxy_user\":\"****\",\"proxy_pass\":\"****\",\"ignore_server_configuration\":false,\"agent_enabled\":true,\"apdex_t\":0.1,\"capture_params\":false,\"logging.level\":\"trace\",\"logging.filepath\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic_agent.log\",\"error_collector.enabled\":true,\"error_collector.ignore_status_codes.0\":404,\"transaction_tracer.enabled\":true,\"transaction_tracer.transaction_threshold\":\"apdex_f\",\"transaction_tracer.top_n\":20,\"transaction_tracer.record_sql\":\"off\",\"debug.internal_metrics\":false,\"debug.tracer_tracing\":false,\"enforce_backstop\":true,\"browser_monitoring.enable\":true,\"browser_monitoring.debug\":false,\"browser_monitoring.loader\":\"rum\",\"browser_monitoring.loader_version\":\"\",\"browser_monitoring.auto_instrument\":true,\"transaction_events.enabled\":true,\"transaction_events.max_samples_per_minute\":10000,\"transaction_events.max_samples_stored\":20000,\"high_security\":false,\"feature_flag.proxy\":true,\"feature_flag.mysql_pool\":true,\"feature_flag.custom_instrumentation\":true,\"newrelic_home\":null,\"config_file_path\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic.js\",\"run_id\":null,\"application_id\":null,\"data_report_period\":60,\"product_level\":0,\"collect_traces\":true,\"collect_errors\":true,\"version\":\"1.11.2\"},\"high_security\":false}]","time":"2014-09-26T16:55:34.534Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[{\"pid\":12965,\"host\":\"hakimu-mbp\",\"language\":\"nodejs\",\"app_name\":[\"Node_Express_Mongo API\"],\"agent_version\":\"1.11.2\",\"environment\":[[\"Framework\",\"express\"],[\"Dispatcher\",\"express\"],[\"Dispatcher\",\"http\"],[\"Processors\",8],[\"OS\",\"Darwin\"],[\"OS version\",\"13.1.0\"],[\"Node.js version\",\"v0.10.28\"],[\"Architecture\",\"x64\"],[\"npm installed?\",\"no\"],[\"Dynamically linked to OpenSSL?\",\"no\"],[\"Dynamically linked to V8?\",\"no\"],[\"Dynamically linked to Zlib?\",\"no\"],[\"DTrace support?\",\"yes\"],[\"Event Tracing for Windows (ETW) support?\",\"no\"],[\"OpenSSL support?\",\"yes\"],[\"Packages\",[\"[\\\"bl\\\",\\\"0.8.0\\\"]\",\"[\\\"body-parser\\\",\\\"1.0.2\\\"]\",\"[\\\"bunyan\\\",\\\"1.0.0\\\"]\",\"[\\\"express\\\",\\\"4.0.0, 4.3.0\\\"]\",\"[\\\"jade\\\",\\\"1.3.1\\\"]\",\"[\\\"mongodb\\\",\\\"1.4.9\\\"]\",\"[\\\"mongojs\\\",\\\"0.14.1\\\"]\",\"[\\\"mongoose\\\",\\\"3.6.20\\\"]\",\"[\\\"newrelic\\\",\\\"1.11.2, 1.2.0\\\"]\",\"[\\\"through2-map\\\",\\\"1.2.1\\\"]\",\"[\\\"undefined\\\",\\\"\\\"]\"]],[\"Dependencies\",[\"[\\\"accepts\\\",\\\"1.0.0, 1.0.1\\\"]\",\"[\\\"amdefine\\\",\\\"0.1.0\\\"]\",\"[\\\"async\\\",\\\"0.2.10\\\"]\",\"[\\\"async-listener\\\",\\\"0.4.7, 0.4.5\\\"]\",\"[\\\"bson\\\",\\\"0.2.2, 0.2.12\\\"]\",\"[\\\"buffer-crc32\\\",\\\"0.2.1\\\"]\",\"[\\\"bunyan\\\",\\\"0.14.6\\\"]\",\"[\\\"bytes\\\",\\\"1.0.0\\\"]\",\"[\\\"character-parser\\\",\\\"1.2.0\\\"]\",\"[\\\"commander\\\",\\\"2.1.0\\\"]\",\"[\\\"constantinople\\\",\\\"2.0.0\\\"]\",\"[\\\"continuation-local-storage\\\",\\\"3.1.1, 2.6.2\\\"]\",\"[\\\"cookie\\\",\\\"0.1.0, 0.1.2\\\"]\",\"[\\\"cookie-signature\\\",\\\"1.0.3\\\"]\",\"[\\\"core-util-is\\\",\\\"1.0.1\\\"]\",\"[\\\"css\\\",\\\"1.0.8\\\"]\",\"[\\\"css-parse\\\",\\\"1.0.4\\\"]\",\"[\\\"css-stringify\\\",\\\"1.0.5\\\"]\",\"[\\\"debug\\\",\\\"0.8.1, 0.8.0\\\"]\",\"[\\\"emitter-listener\\\",\\\"1.0.1\\\"]\",\"[\\\"escape-html\\\",\\\"1.0.1\\\"]\",\"[\\\"fresh\\\",\\\"0.2.2, 0.2.0\\\"]\",\"[\\\"hooks\\\",\\\"0.2.1\\\"]\",\"[\\\"inherits\\\",\\\"2.0.1\\\"]\",\"[\\\"ipaddr.js\\\",\\\"0.1.2\\\"]\",\"[\\\"is-promise\\\",\\\"1.0.0\\\"]\",\"[\\\"isarray\\\",\\\"0.0.1\\\"]\",\"[\\\"kerberos\\\",\\\"0.0.3\\\"]\",\"[\\\"lru-cache\\\",\\\"2.5.0\\\"]\",\"[\\\"merge-descriptors\\\",\\\"0.0.2\\\"]\",\"[\\\"methods\\\",\\\"0.1.0, 1.0.0\\\"]\",\"[\\\"mime\\\",\\\"1.2.11\\\"]\",\"[\\\"minimatch\\\",\\\"0.2.14\\\"]\",\"[\\\"minimist\\\",\\\"0.0.8\\\"]\",\"[\\\"mkdirp\\\",\\\"0.5.0, 0.3.5\\\"]\",\"[\\\"mongodb\\\",\\\"1.3.19, 1.4.9\\\"]\",\"[\\\"monocle\\\",\\\"1.1.51\\\"]\",\"[\\\"mpath\\\",\\\"0.1.1\\\"]\",\"[\\\"mpromise\\\",\\\"0.2.1\\\"]\",\"[\\\"ms\\\",\\\"0.1.0\\\"]\",\"[\\\"muri\\\",\\\"0.3.1\\\"]\",\"[\\\"mv\\\",\\\"2.0.3\\\"]\",\"[\\\"nan\\\",\\\"1.2.0\\\"]\",\"[\\\"ncp\\\",\\\"0.6.0\\\"]\",\"[\\\"negotiator\\\",\\\"0.3.0, 0.4.3\\\"]\",\"[\\\"object-keys\\\",\\\"0.4.0\\\"]\",\"[\\\"optimist\\\",\\\"0.3.7\\\"]\",\"[\\\"parseurl\\\",\\\"1.0.1\\\"]\",\"[\\\"path-to-regexp\\\",\\\"0.1.2\\\"]\",\"[\\\"promise\\\",\\\"2.0.0\\\"]\",\"[\\\"proxy-addr\\\",\\\"1.0.0\\\"]\",\"[\\\"proxying-agent\\\",\\\"0.1.5\\\"]\",\"[\\\"qs\\\",\\\"0.6.6\\\"]\",\"[\\\"range-parser\\\",\\\"1.0.0, 0.0.4\\\"]\",\"[\\\"raw-body\\\",\\\"1.1.7\\\"]\",\"[\\\"readable-stream\\\",\\\"1.0.26-4, 1.0.31, 1.1.13, 1.1.12\\\"]\",\"[\\\"readdirp\\\",\\\"0.2.5\\\"]\",\"[\\\"regexp-clone\\\",\\\"0.0.1\\\"]\",\"[\\\"rimraf\\\",\\\"2.2.8\\\"]\",\"[\\\"send\\\",\\\"0.2.0, 0.1.4, 0.3.0\\\"]\",\"[\\\"serve-static\\\",\\\"1.0.1, 1.1.0\\\"]\",\"[\\\"shimmer\\\",\\\"1.0.0\\\"]\",\"[\\\"sigmund\\\",\\\"1.0.0\\\"]\",\"[\\\"sliced\\\",\\\"0.0.5, 0.0.4\\\"]\",\"[\\\"source-map\\\",\\\"0.1.33\\\"]\",\"[\\\"string_decoder\\\",\\\"0.10.31, 0.10.25-1\\\"]\",\"[\\\"terminus\\\",\\\"1.0.9\\\"]\",\"[\\\"through2\\\",\\\"0.2.3\\\"]\",\"[\\\"thunky\\\",\\\"0.1.0\\\"]\",\"[\\\"transformers\\\",\\\"2.1.0\\\"]\",\"[\\\"type-is\\\",\\\"1.1.0, 1.0.0, 1.2.0\\\"]\",\"[\\\"uglify-js\\\",\\\"2.4.13, 2.2.5\\\"]\",\"[\\\"uglify-to-browserify\\\",\\\"1.0.2\\\"]\",\"[\\\"undefined\\\",\\\"\\\"]\",\"[\\\"utils-merge\\\",\\\"1.0.0\\\"]\",\"[\\\"with\\\",\\\"3.0.0\\\"]\",\"[\\\"wordwrap\\\",\\\"0.0.2\\\"]\",\"[\\\"xtend\\\",\\\"2.1.2\\\"]\",\"[\\\"yakaa\\\",\\\"1.0.0\\\"]\"]]],\"settings\":{\"domain\":null,\"_maxListeners\":10,\"app_name.0\":\"Node_Express_Mongo API\",\"license_key\":\"388a69ff95a524d34e15f43d3c34d384457054fb\",\"host\":\"collector-111.newrelic.com\",\"port\":443,\"ssl\":true,\"proxy\":\"****\",\"proxy_host\":\"\",\"proxy_port\":\"\",\"proxy_user\":\"****\",\"proxy_pass\":\"****\",\"ignore_server_configuration\":false,\"agent_enabled\":true,\"apdex_t\":0.1,\"capture_params\":false,\"logging.level\":\"trace\",\"logging.filepath\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic_agent.log\",\"error_collector.enabled\":true,\"error_collector.ignore_status_codes.0\":404,\"transaction_tracer.enabled\":true,\"transaction_tracer.transaction_threshold\":\"apdex_f\",\"transaction_tracer.top_n\":20,\"transaction_tracer.record_sql\":\"off\",\"debug.internal_metrics\":false,\"debug.tracer_tracing\":false,\"enforce_backstop\":true,\"browser_monitoring.enable\":true,\"browser_monitoring.debug\":false,\"browser_monitoring.loader\":\"rum\",\"browser_monitoring.loader_version\":\"\",\"browser_monitoring.auto_instrument\":true,\"transaction_events.enabled\":true,\"transaction_events.max_samples_per_minute\":10000,\"transaction_events.max_samples_stored\":20000,\"high_security\":false,\"feature_flag.proxy\":true,\"feature_flag.mysql_pool\":true,\"feature_flag.custom_instrumentation\":true,\"newrelic_home\":null,\"config_file_path\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic.js\",\"run_id\":null,\"application_id\":null,\"data_report_period\":60,\"product_level\":0,\"collect_traces\":true,\"collect_errors\":true,\"version\":\"1.11.2\"},\"high_security\":false}]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=connect","time":"2014-09-26T16:55:34.535Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for connect.","time":"2014-09-26T16:55:34.864Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":{"agent_run_id":1499330255,"product_level":40,"js_agent_file":"js-agent.newrelic.com/nr-460.min.js","episodes_url":"https://js-agent.newrelic.com/nr-100.js","cross_process_id":"527930#3926256","collect_errors":true,"url_rules":[{"eval_order":1000,"replace_all":false,"ignore":false,"replacement":"/*.\\1","match_expression":".*\\.(ace|arj|ini|txt|udl|plist|css|gif|ico|jpe?g|js|png|swf|woff|caf|aiff|m4v|mpe?g|mp3|mp4|mov)$","terminate_chain":true,"each_segment":false},{"eval_order":1001,"replace_all":false,"ignore":false,"replacement":"*","match_expression":"^[0-9][0-9a-f_,.-]*$","terminate_chain":false,"each_segment":true},{"eval_order":1002,"replace_all":false,"ignore":false,"replacement":"\\1/.*\\2","match_expression":"^(.*)/[0-9][0-9a-f_,-]*\\.([0-9a-z][0-9a-z]*)$","terminate_chain":false,"each_segment":false}],"messages":[{"message":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","level":"INFO"}],"js_agent_loader_version":"nr-loader-full-323.min.js","data_report_period":60,"collect_traces":true,"sampling_rate":0,"js_agent_loader":"window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o?o:n)},o,o.exports)}return n[e].exports}if(\"function\"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({QJf3ax:[function(t,n){function e(t){function n(n,e,o){t&&t(n,e,o),o||(o={});for(var a=i(n),u=a.length,c=o[r]||(o[r]={}),f=0;u>f;f++)a[f].apply(c,e);return c}function o(t,n){u[t]=i(t).concat(n)}function i(t){return u[t]||[]}function a(){return e(n)}var u={};return{on:o,emit:n,create:a,listeners:i,_events:u}}var r=\"nr@context\";n.exports=e()},{}],ee:[function(t,n){n.exports=t(\"QJf3ax\")},{}],D5DuLP:[function(t,n){function e(t,n,e){return r.listeners(t).length?r.emit(t,n,e):(o[t]||(o[t]=[]),void o[t].push(n))}var r=t(\"ee\").create(),o={};n.exports=e,e.ee=r,r.q=o},{ee:\"QJf3ax\"}],handle:[function(t,n){n.exports=t(\"D5DuLP\")},{}],loader:[function(t,n){n.exports=t(\"G9z0Bl\")},{}],G9z0Bl:[function(t,n){function e(){var t=l.info=NREUM.info;if(t&&t.agent&&t.licenseKey&&t.applicationID&&c&&c.body){l.proto=\"https\"===p.split(\":\")[0]||t.sslForHttp?\"https://\":\"http://\",a(\"mark\",[\"onload\",i()]);var n=c.createElement(\"script\");n.src=l.proto+t.agent,c.body.appendChild(n)}}function r(){\"complete\"===c.readyState&&o()}function o(){a(\"mark\",[\"domContent\",i()])}function i(){return(new Date).getTime()}var a=t(\"handle\"),u=window,c=u.document,f=\"addEventListener\",s=\"attachEvent\",p=(\"\"+location).split(\"?\")[0],l=n.exports={offset:i(),origin:p,features:{}};c[f]?(c[f](\"DOMContentLoaded\",o,!1),u[f](\"load\",e,!1)):(c[s](\"onreadystatechange\",r),u[s](\"onload\",e)),a(\"mark\",[\"firstbyte\",i()])},{handle:\"D5DuLP\"}]},{},[\"G9z0Bl\"]);","browser_monitoring.loader":null,"browser_key":"106b4f914c","encoding_key":"d67afc830dab717fd163bfcb0b8b88423e9a1a3b","apdex_t":0.1,"episodes_file":"js-agent.newrelic.com/nr-100.js","collect_analytics_events":true,"browser_monitoring.loader_version":"460","error_beacon":"bam.nr-data.net","trusted_account_ids":[527930],"beacon":"beacon-6.newrelic.com","browser_monitoring.debug":null,"application_id":"3926256"}},"msg":"Deserialized from collector:","time":"2014-09-26T16:55:34.864Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-26T16:55:34.865Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Agent state changed from starting to connected.","time":"2014-09-26T16:55:34.865Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1499330255.","time":"2014-09-26T16:55:34.865Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Configuration of product_level was changed to 40 by New Relic.","time":"2014-09-26T16:55:34.866Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Configuration of js_agent_file was changed to js-agent.newrelic.com/nr-460.min.js by New Relic.","time":"2014-09-26T16:55:34.866Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Server-side configuration of episodes_url is currently not supported by the Node.js agent. (Server sent value of \"https://js-agent.newrelic.com/nr-100.js\".)","time":"2014-09-26T16:55:34.866Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Server-side configuration of cross_process_id is currently not supported by the Node.js agent. (Server sent value of \"527930#3926256\".)","time":"2014-09-26T16:55:34.866Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"metric_normalizer","level":20,"msg":"Received 3 URL normalization rule(s)","time":"2014-09-26T16:55:34.866Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"normalizer_rule","level":10,"msg":"Loaded normalization rule: {\"eachSegment\":false,\"precedence\":1000,\"isTerminal\":true,\"replacement\":\"/*.$1\",\"replaceAll\":false,\"ignore\":false,\"pattern\":\".*\\\\.(ace|arj|ini|txt|udl|plist|css|gif|ico|jpe?g|js|png|swf|woff|caf|aiff|m4v|mpe?g|mp3|mp4|mov)$\"}","time":"2014-09-26T16:55:34.866Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"normalizer_rule","level":10,"msg":"Loaded normalization rule: {\"eachSegment\":true,\"precedence\":1001,\"isTerminal\":false,\"replacement\":\"*\",\"replaceAll\":false,\"ignore\":false,\"pattern\":\"^[0-9][0-9a-f_,.-]*$\"}","time":"2014-09-26T16:55:34.866Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"normalizer_rule","level":10,"msg":"Loaded normalization rule: {\"eachSegment\":false,\"precedence\":1002,\"isTerminal\":false,\"replacement\":\"$1/.*$2\",\"replaceAll\":false,\"ignore\":false,\"pattern\":\"^(.*)/[0-9][0-9a-f_,-]*\\\\.([0-9a-z][0-9a-z]*)$\"}","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"metric_normalizer","level":20,"msg":"Normalized to 3 URL normalization rule(s).","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"New Relic sent unknown configuration parameter js_agent_loader_version with value \"nr-loader-full-323.min.js\".","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Server-side configuration of sampling_rate is currently not supported by the Node.js agent. (Server sent value of 0.)","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Configuration of js_agent_loader was changed to window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o?o:n)},o,o.exports)}return n[e].exports}if(\"function\"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({QJf3ax:[function(t,n){function e(t){function n(n,e,o){t&&t(n,e,o),o||(o={});for(var a=i(n),u=a.length,c=o[r]||(o[r]={}),f=0;u>f;f++)a[f].apply(c,e);return c}function o(t,n){u[t]=i(t).concat(n)}function i(t){return u[t]||[]}function a(){return e(n)}var u={};return{on:o,emit:n,create:a,listeners:i,_events:u}}var r=\"nr@context\";n.exports=e()},{}],ee:[function(t,n){n.exports=t(\"QJf3ax\")},{}],D5DuLP:[function(t,n){function e(t,n,e){return r.listeners(t).length?r.emit(t,n,e):(o[t]||(o[t]=[]),void o[t].push(n))}var r=t(\"ee\").create(),o={};n.exports=e,e.ee=r,r.q=o},{ee:\"QJf3ax\"}],handle:[function(t,n){n.exports=t(\"D5DuLP\")},{}],loader:[function(t,n){n.exports=t(\"G9z0Bl\")},{}],G9z0Bl:[function(t,n){function e(){var t=l.info=NREUM.info;if(t&&t.agent&&t.licenseKey&&t.applicationID&&c&&c.body){l.proto=\"https\"===p.split(\":\")[0]||t.sslForHttp?\"https://\":\"http://\",a(\"mark\",[\"onload\",i()]);var n=c.createElement(\"script\");n.src=l.proto+t.agent,c.body.appendChild(n)}}function r(){\"complete\"===c.readyState&&o()}function o(){a(\"mark\",[\"domContent\",i()])}function i(){return(new Date).getTime()}var a=t(\"handle\"),u=window,c=u.document,f=\"addEventListener\",s=\"attachEvent\",p=(\"\"+location).split(\"?\")[0],l=n.exports={offset:i(),origin:p,features:{}};c[f]?(c[f](\"DOMContentLoaded\",o,!1),u[f](\"load\",e,!1)):(c[s](\"onreadystatechange\",r),u[s](\"onload\",e)),a(\"mark\",[\"firstbyte\",i()])},{handle:\"D5DuLP\"}]},{},[\"G9z0Bl\"]); by New Relic.","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Configuration of browser_key was changed to 106b4f914c by New Relic.","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Server-side configuration of encoding_key is currently not supported by the Node.js agent. (Server sent value of \"d67afc830dab717fd163bfcb0b8b88423e9a1a3b\".)","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Server-side configuration of episodes_file is currently not supported by the Node.js agent. (Server sent value of \"js-agent.newrelic.com/nr-100.js\".)","time":"2014-09-26T16:55:34.867Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"New Relic sent unknown configuration parameter browser_monitoring.loader_version with value \"460\".","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Configuration of error_beacon was changed to bam.nr-data.net by New Relic.","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Server-side configuration of trusted_account_ids is currently not supported by the Node.js agent. (Server sent value of [527930].)","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Configuration of beacon was changed to beacon-6.newrelic.com by New Relic.","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"New Relic sent unknown configuration parameter browser_monitoring.debug with value null.","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Configuration of application_id was changed to 3926256 by New Relic.","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling agent_settings on collector API with: [{\"domain\":null,\"_maxListeners\":10,\"app_name.0\":\"Node_Express_Mongo API\",\"license_key\":\"388a69ff95a524d34e15f43d3c34d384457054fb\",\"host\":\"collector-111.newrelic.com\",\"port\":443,\"ssl\":true,\"proxy\":\"****\",\"proxy_host\":\"\",\"proxy_port\":\"\",\"proxy_user\":\"****\",\"proxy_pass\":\"****\",\"ignore_server_configuration\":false,\"agent_enabled\":true,\"apdex_t\":0.1,\"capture_params\":false,\"logging.level\":\"trace\",\"logging.filepath\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic_agent.log\",\"error_collector.enabled\":true,\"error_collector.ignore_status_codes.0\":404,\"transaction_tracer.enabled\":true,\"transaction_tracer.transaction_threshold\":\"apdex_f\",\"transaction_tracer.top_n\":20,\"transaction_tracer.record_sql\":\"off\",\"debug.internal_metrics\":false,\"debug.tracer_tracing\":false,\"enforce_backstop\":true,\"browser_monitoring.enable\":true,\"browser_monitoring.debug\":false,\"browser_monitoring.loader\":\"rum\",\"browser_monitoring.loader_version\":\"\",\"browser_monitoring.auto_instrument\":true,\"browser_monitoring.js_agent_file\":\"js-agent.newrelic.com/nr-460.min.js\",\"browser_monitoring.js_agent_loader\":\"window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o?o:n)},o,o.exports)}return n[e].exports}if(\\\"function\\\"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({QJf3ax:[function(t,n){function e(t){function n(n,e,o){t&&t(n,e,o),o||(o={});for(var a=i(n),u=a.length,c=o[r]||(o[r]={}),f=0;u>f;f++)a[f].apply(c,e);return c}function o(t,n){u[t]=i(t).concat(n)}function i(t){return u[t]||[]}function a(){return e(n)}var u={};return{on:o,emit:n,create:a,listeners:i,_events:u}}var r=\\\"nr@context\\\";n.exports=e()},{}],ee:[function(t,n){n.exports=t(\\\"QJf3ax\\\")},{}],D5DuLP:[function(t,n){function e(t,n,e){return r.listeners(t).length?r.emit(t,n,e):(o[t]||(o[t]=[]),void o[t].push(n))}var r=t(\\\"ee\\\").create(),o={};n.exports=e,e.ee=r,r.q=o},{ee:\\\"QJf3ax\\\"}],handle:[function(t,n){n.exports=t(\\\"D5DuLP\\\")},{}],loader:[function(t,n){n.exports=t(\\\"G9z0Bl\\\")},{}],G9z0Bl:[function(t,n){function e(){var t=l.info=NREUM.info;if(t&&t.agent&&t.licenseKey&&t.applicationID&&c&&c.body){l.proto=\\\"https\\\"===p.split(\\\":\\\")[0]||t.sslForHttp?\\\"https://\\\":\\\"http://\\\",a(\\\"mark\\\",[\\\"onload\\\",i()]);var n=c.createElement(\\\"script\\\");n.src=l.proto+t.agent,c.body.appendChild(n)}}function r(){\\\"complete\\\"===c.readyState&&o()}function o(){a(\\\"mark\\\",[\\\"domContent\\\",i()])}function i(){return(new Date).getTime()}var a=t(\\\"handle\\\"),u=window,c=u.document,f=\\\"addEventListener\\\",s=\\\"attachEvent\\\",p=(\\\"\\\"+location).split(\\\"?\\\")[0],l=n.exports={offset:i(),origin:p,features:{}};c[f]?(c[f](\\\"DOMContentLoaded\\\",o,!1),u[f](\\\"load\\\",e,!1)):(c[s](\\\"onreadystatechange\\\",r),u[s](\\\"onload\\\",e)),a(\\\"mark\\\",[\\\"firstbyte\\\",i()])},{handle:\\\"D5DuLP\\\"}]},{},[\\\"G9z0Bl\\\"]);\",\"browser_monitoring.browser_key\":\"106b4f914c\",\"browser_monitoring.error_beacon\":\"bam.nr-data.net\",\"browser_monitoring.beacon\":\"beacon-6.newrelic.com\",\"transaction_events.enabled\":true,\"transaction_events.max_samples_per_minute\":10000,\"transaction_events.max_samples_stored\":20000,\"high_security\":false,\"feature_flag.proxy\":true,\"feature_flag.mysql_pool\":true,\"feature_flag.custom_instrumentation\":true,\"newrelic_home\":null,\"config_file_path\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic.js\",\"run_id\":1499330255,\"application_id\":\"3926256\",\"data_report_period\":60,\"product_level\":40,\"collect_traces\":true,\"collect_errors\":true,\"version\":\"1.11.2\"}]","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[{\"domain\":null,\"_maxListeners\":10,\"app_name.0\":\"Node_Express_Mongo API\",\"license_key\":\"388a69ff95a524d34e15f43d3c34d384457054fb\",\"host\":\"collector-111.newrelic.com\",\"port\":443,\"ssl\":true,\"proxy\":\"****\",\"proxy_host\":\"\",\"proxy_port\":\"\",\"proxy_user\":\"****\",\"proxy_pass\":\"****\",\"ignore_server_configuration\":false,\"agent_enabled\":true,\"apdex_t\":0.1,\"capture_params\":false,\"logging.level\":\"trace\",\"logging.filepath\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic_agent.log\",\"error_collector.enabled\":true,\"error_collector.ignore_status_codes.0\":404,\"transaction_tracer.enabled\":true,\"transaction_tracer.transaction_threshold\":\"apdex_f\",\"transaction_tracer.top_n\":20,\"transaction_tracer.record_sql\":\"off\",\"debug.internal_metrics\":false,\"debug.tracer_tracing\":false,\"enforce_backstop\":true,\"browser_monitoring.enable\":true,\"browser_monitoring.debug\":false,\"browser_monitoring.loader\":\"rum\",\"browser_monitoring.loader_version\":\"\",\"browser_monitoring.auto_instrument\":true,\"browser_monitoring.js_agent_file\":\"js-agent.newrelic.com/nr-460.min.js\",\"browser_monitoring.js_agent_loader\":\"window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o?o:n)},o,o.exports)}return n[e].exports}if(\\\"function\\\"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({QJf3ax:[function(t,n){function e(t){function n(n,e,o){t&&t(n,e,o),o||(o={});for(var a=i(n),u=a.length,c=o[r]||(o[r]={}),f=0;u>f;f++)a[f].apply(c,e);return c}function o(t,n){u[t]=i(t).concat(n)}function i(t){return u[t]||[]}function a(){return e(n)}var u={};return{on:o,emit:n,create:a,listeners:i,_events:u}}var r=\\\"nr@context\\\";n.exports=e()},{}],ee:[function(t,n){n.exports=t(\\\"QJf3ax\\\")},{}],D5DuLP:[function(t,n){function e(t,n,e){return r.listeners(t).length?r.emit(t,n,e):(o[t]||(o[t]=[]),void o[t].push(n))}var r=t(\\\"ee\\\").create(),o={};n.exports=e,e.ee=r,r.q=o},{ee:\\\"QJf3ax\\\"}],handle:[function(t,n){n.exports=t(\\\"D5DuLP\\\")},{}],loader:[function(t,n){n.exports=t(\\\"G9z0Bl\\\")},{}],G9z0Bl:[function(t,n){function e(){var t=l.info=NREUM.info;if(t&&t.agent&&t.licenseKey&&t.applicationID&&c&&c.body){l.proto=\\\"https\\\"===p.split(\\\":\\\")[0]||t.sslForHttp?\\\"https://\\\":\\\"http://\\\",a(\\\"mark\\\",[\\\"onload\\\",i()]);var n=c.createElement(\\\"script\\\");n.src=l.proto+t.agent,c.body.appendChild(n)}}function r(){\\\"complete\\\"===c.readyState&&o()}function o(){a(\\\"mark\\\",[\\\"domContent\\\",i()])}function i(){return(new Date).getTime()}var a=t(\\\"handle\\\"),u=window,c=u.document,f=\\\"addEventListener\\\",s=\\\"attachEvent\\\",p=(\\\"\\\"+location).split(\\\"?\\\")[0],l=n.exports={offset:i(),origin:p,features:{}};c[f]?(c[f](\\\"DOMContentLoaded\\\",o,!1),u[f](\\\"load\\\",e,!1)):(c[s](\\\"onreadystatechange\\\",r),u[s](\\\"onload\\\",e)),a(\\\"mark\\\",[\\\"firstbyte\\\",i()])},{handle:\\\"D5DuLP\\\"}]},{},[\\\"G9z0Bl\\\"]);\",\"browser_monitoring.browser_key\":\"106b4f914c\",\"browser_monitoring.error_beacon\":\"bam.nr-data.net\",\"browser_monitoring.beacon\":\"beacon-6.newrelic.com\",\"transaction_events.enabled\":true,\"transaction_events.max_samples_per_minute\":10000,\"transaction_events.max_samples_stored\":20000,\"high_security\":false,\"feature_flag.proxy\":true,\"feature_flag.mysql_pool\":true,\"feature_flag.custom_instrumentation\":true,\"newrelic_home\":null,\"config_file_path\":\"/Users/hakimu/Documents/scribble/node_express_mongo/newrelic.js\",\"run_id\":1499330255,\"application_id\":\"3926256\",\"data_report_period\":60,\"product_level\":40,\"collect_traces\":true,\"collect_errors\":true,\"version\":\"1.11.2\"}]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=agent_settings&run_id=1499330255","time":"2014-09-26T16:55:34.868Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No metrics to send.","time":"2014-09-26T16:55:34.873Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T16:55:34.873Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"Agent state changed from connected to started.","time":"2014-09-26T16:55:34.874Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"New Relic for Node.js is connected to New Relic.","time":"2014-09-26T16:55:34.874Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for agent_settings.","time":"2014-09-26T16:55:35.323Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":null},"msg":"Deserialized from collector:","time":"2014-09-26T16:55:35.323Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:20.672Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB fridays.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:20.673Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:20.681Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:21.697Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB fridays.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:21.697Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:21.699Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:25.373Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:25.373Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:25.381Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:29.493Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:29.493Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:29.496Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:30.083Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:30.083Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:30.087Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:30.788Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:30.788Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:30.792Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:31.436Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:31.437Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:31.439Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:32.060Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:32.060Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:32.065Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750533.177,1411750594.863,[[{\"name\":\"Memory/Physical\"},[12,527.7578125,527.7578125,43.7734375,44.8359375,23212.143981933594]],[{\"name\":\"Events/wait\"},[4,0.005452587,0.005452587,0.001315033,0.0014273810000000001,0.000007439353633039]],[{\"name\":\"WebTransaction\"},[8,0.042990561000000004,0.011535482875000001,0.002806085,0.010634151,0.000284296349972837]],[{\"name\":\"HttpDispatcher\"},[8,0.042990561000000004,0.011535482875000001,0.002806085,0.010634151,0.000284296349972837]],[{\"name\":\"WebTransaction/Expressjs/GET//test\"},[2,0.013440236,0.006126515296874999,0.002806085,0.010634151,0.000120959280518026]],[{\"name\":\"Apdex/Expressjs/GET//test\"},[2,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[8,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\"},[2,0.008712613000000001,0.008730522000000001,0.0017689440000000002,0.006943669,0.00005134370205669701]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"Datastore/allWeb\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"Datastore/all\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[6,0.029550325000000002,0.005408967578125,0.00329044,0.008291338,0.00016333706945481101]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[6,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[6,0.025883731000000004,0.025898903999999997,0.002529324,0.007667528,0.000129935951424759]],[{\"name\":\"WebTransaction/Expressjs/GET//test\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[2,0.013440236,0.006126515296874999,0.002806085,0.010634151,0.000120959280518026]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[2,0.008712613000000001,0.008730522000000001,0.0017689440000000002,0.006943669,0.00005134370205669701]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.029550325000000002,0.005408967578125,0.00329044,0.008291338,0.00016333706945481101]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.025883731000000004,0.025898903999999997,0.002529324,0.007667528,0.000129935951424759]]]]","time":"2014-09-26T16:56:34.863Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750533.177,1411750594.863,[[{\"name\":\"Memory/Physical\"},[12,527.7578125,527.7578125,43.7734375,44.8359375,23212.143981933594]],[{\"name\":\"Events/wait\"},[4,0.005452587,0.005452587,0.001315033,0.0014273810000000001,0.000007439353633039]],[{\"name\":\"WebTransaction\"},[8,0.042990561000000004,0.011535482875000001,0.002806085,0.010634151,0.000284296349972837]],[{\"name\":\"HttpDispatcher\"},[8,0.042990561000000004,0.011535482875000001,0.002806085,0.010634151,0.000284296349972837]],[{\"name\":\"WebTransaction/Expressjs/GET//test\"},[2,0.013440236,0.006126515296874999,0.002806085,0.010634151,0.000120959280518026]],[{\"name\":\"Apdex/Expressjs/GET//test\"},[2,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[8,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\"},[2,0.008712613000000001,0.008730522000000001,0.0017689440000000002,0.006943669,0.00005134370205669701]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"Datastore/allWeb\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"Datastore/all\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[8,0.034596344,0.034629426000000005,0.0017689440000000002,0.007667528,0.00018127965348145602]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[6,0.029550325000000002,0.005408967578125,0.00329044,0.008291338,0.00016333706945481101]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[6,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[6,0.025883731000000004,0.025898903999999997,0.002529324,0.007667528,0.000129935951424759]],[{\"name\":\"WebTransaction/Expressjs/GET//test\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[2,0.013440236,0.006126515296874999,0.002806085,0.010634151,0.000120959280518026]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[2,0.008712613000000001,0.008730522000000001,0.0017689440000000002,0.006943669,0.00005134370205669701]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.029550325000000002,0.005408967578125,0.00329044,0.008291338,0.00016333706945481101]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.025883731000000004,0.025898903999999997,0.002529324,0.007667528,0.000129935951424759]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T16:56:34.864Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T16:56:35.204Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T16:56:35.204Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T16:56:35.204Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T16:56:35.204Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling analytic_event_data on collector API with: [1499330255,[[{\"webDuration\":0.012,\"timestamp\":1411750580666,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.012,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750581695,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.008,\"timestamp\":1411750585372,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.008,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.004,\"timestamp\":1411750589492,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.005,\"timestamp\":1411750590082,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.005,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.005,\"timestamp\":1411750590787,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.005,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.004,\"timestamp\":1411750591435,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.006,\"timestamp\":1411750592059,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.006,\"type\":\"Transaction\"},{},{}]]]","time":"2014-09-26T16:56:35.205Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,[[{\"webDuration\":0.012,\"timestamp\":1411750580666,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.012,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750581695,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.008,\"timestamp\":1411750585372,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.008,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.004,\"timestamp\":1411750589492,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.005,\"timestamp\":1411750590082,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.005,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.005,\"timestamp\":1411750590787,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.005,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.004,\"timestamp\":1411750591435,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.006,\"timestamp\":1411750592059,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.006,\"type\":\"Transaction\"},{},{}]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=analytic_event_data&run_id=1499330255","time":"2014-09-26T16:56:35.205Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for analytic_event_data.","time":"2014-09-26T16:56:35.460Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":null},"msg":"Deserialized from collector:","time":"2014-09-26T16:56:35.460Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:56.845Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:56.846Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:56.849Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:56:57.747Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:56:57.747Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:56:57.750Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.insert({\"_id\":\"54259ae5c10fa5a532000001\",\"__v\":0}).","time":"2014-09-26T16:57:09.871Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.insert({\"_id\":\"54259ae5c10fa5a532000001\",\"__v\":0}) ended.","time":"2014-09-26T16:57:09.880Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.insert({\"_id\":\"54259ae7c10fa5a532000002\",\"__v\":0}).","time":"2014-09-26T16:57:11.043Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.insert({\"_id\":\"54259ae7c10fa5a532000002\",\"__v\":0}) ended.","time":"2014-09-26T16:57:11.045Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.insert({\"_id\":\"54259ae7c10fa5a532000003\",\"__v\":0}).","time":"2014-09-26T16:57:11.834Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.insert({\"_id\":\"54259ae7c10fa5a532000003\",\"__v\":0}) ended.","time":"2014-09-26T16:57:11.836Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750594.863,1411750654.869,[[{\"name\":\"Memory/Physical\"},[12,552.9375,552.9375,45.71484375,46.421875,25479.36557006836]],[{\"name\":\"Events/wait\"},[4,0.004249384,0.004249384,0.000338093,0.00134716,0.000005218005351342]],[{\"name\":\"WebTransaction\"},[9,0.028069115999999998,0.013403344515624999,0.000574017,0.012543201,0.000196319553269282]],[{\"name\":\"HttpDispatcher\"},[9,0.028069115999999998,0.013403344515624999,0.000574017,0.012543201,0.000196319553269282]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[2,0.00674549,0.0012471989843750003,0.002973021,0.003772469,0.000023070376222402]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[2,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[9,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[2,0.005613254999999999,0.0056188110000000005,0.0026079659999999998,0.003005289,0.000015833248630677]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[2,0.005613254999999999,0.0056188110000000005,0.0026079659999999998,0.003005289,0.000015833248630677]],[{\"name\":\"Datastore/allWeb\"},[5,0.017384189,0.017402089,0.001145479,0.009125548,0.000102670718079071]],[{\"name\":\"Datastore/all\"},[5,0.017384189,0.017402089,0.001145479,0.009125548,0.000102670718079071]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[5,0.017384189,0.017402089,0.001145479,0.009125548,0.000102670718079071]],[{\"name\":\"WebTransaction/Expressjs/GET//bears\"},[1,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.000007149677036543998]],[{\"name\":\"Apdex/Expressjs/GET//bears\"},[1,0,0,0.1,0.1,0]],[{\"name\":\"WebTransaction/Expressjs/POST//bears\"},[3,0.015867695,0.00670021453125,0.001191694,0.012543201,0.000163300861756037]],[{\"name\":\"Apdex/Expressjs/POST//bears\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/fridays/insert\"},[3,0.011770934,0.011783278,0.001145479,0.009125548,0.000086837469448394]],[{\"name\":\"Datastore/operation/MongoDB/insert\"},[3,0.011770934,0.011783278,0.001145479,0.009125548,0.000086837469448394]],[{\"name\":\"WebTransaction/NormalizedUri/*\"},[3,0.002782043,0.002782043,0.000574017,0.001229419,0.0000027986382542990008]],[{\"name\":\"Apdex/NormalizedUri/*\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[2,0.00674549,0.0012471989843750003,0.002973021,0.003772469,0.000023070376222402]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[2,0.005613254999999999,0.0056188110000000005,0.0026079659999999998,0.003005289,0.000015833248630677]],[{\"name\":\"WebTransaction/Expressjs/GET//bears\",\"scope\":\"WebTransaction/Expressjs/GET//bears\"},[1,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.000007149677036543998]],[{\"name\":\"WebTransaction/Expressjs/POST//bears\",\"scope\":\"WebTransaction/Expressjs/POST//bears\"},[3,0.015867695,0.00670021453125,0.001191694,0.012543201,0.000163300861756037]],[{\"name\":\"Datastore/statement/MongoDB/fridays/insert\",\"scope\":\"WebTransaction/Expressjs/POST//bears\"},[3,0.011770934,0.011783278,0.001145479,0.009125548,0.000086837469448394]],[{\"name\":\"WebTransaction/NormalizedUri/*\",\"scope\":\"WebTransaction/NormalizedUri/*\"},[3,0.002782043,0.002782043,0.000574017,0.001229419,0.0000027986382542990008]]]]","time":"2014-09-26T16:57:34.869Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750594.863,1411750654.869,[[{\"name\":\"Memory/Physical\"},[12,552.9375,552.9375,45.71484375,46.421875,25479.36557006836]],[{\"name\":\"Events/wait\"},[4,0.004249384,0.004249384,0.000338093,0.00134716,0.000005218005351342]],[{\"name\":\"WebTransaction\"},[9,0.028069115999999998,0.013403344515624999,0.000574017,0.012543201,0.000196319553269282]],[{\"name\":\"HttpDispatcher\"},[9,0.028069115999999998,0.013403344515624999,0.000574017,0.012543201,0.000196319553269282]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[2,0.00674549,0.0012471989843750003,0.002973021,0.003772469,0.000023070376222402]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[2,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[9,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[2,0.005613254999999999,0.0056188110000000005,0.0026079659999999998,0.003005289,0.000015833248630677]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[2,0.005613254999999999,0.0056188110000000005,0.0026079659999999998,0.003005289,0.000015833248630677]],[{\"name\":\"Datastore/allWeb\"},[5,0.017384189,0.017402089,0.001145479,0.009125548,0.000102670718079071]],[{\"name\":\"Datastore/all\"},[5,0.017384189,0.017402089,0.001145479,0.009125548,0.000102670718079071]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[5,0.017384189,0.017402089,0.001145479,0.009125548,0.000102670718079071]],[{\"name\":\"WebTransaction/Expressjs/GET//bears\"},[1,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.000007149677036543998]],[{\"name\":\"Apdex/Expressjs/GET//bears\"},[1,0,0,0.1,0.1,0]],[{\"name\":\"WebTransaction/Expressjs/POST//bears\"},[3,0.015867695,0.00670021453125,0.001191694,0.012543201,0.000163300861756037]],[{\"name\":\"Apdex/Expressjs/POST//bears\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/fridays/insert\"},[3,0.011770934,0.011783278,0.001145479,0.009125548,0.000086837469448394]],[{\"name\":\"Datastore/operation/MongoDB/insert\"},[3,0.011770934,0.011783278,0.001145479,0.009125548,0.000086837469448394]],[{\"name\":\"WebTransaction/NormalizedUri/*\"},[3,0.002782043,0.002782043,0.000574017,0.001229419,0.0000027986382542990008]],[{\"name\":\"Apdex/NormalizedUri/*\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[2,0.00674549,0.0012471989843750003,0.002973021,0.003772469,0.000023070376222402]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[2,0.005613254999999999,0.0056188110000000005,0.0026079659999999998,0.003005289,0.000015833248630677]],[{\"name\":\"WebTransaction/Expressjs/GET//bears\",\"scope\":\"WebTransaction/Expressjs/GET//bears\"},[1,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.0026738879999999997,0.000007149677036543998]],[{\"name\":\"WebTransaction/Expressjs/POST//bears\",\"scope\":\"WebTransaction/Expressjs/POST//bears\"},[3,0.015867695,0.00670021453125,0.001191694,0.012543201,0.000163300861756037]],[{\"name\":\"Datastore/statement/MongoDB/fridays/insert\",\"scope\":\"WebTransaction/Expressjs/POST//bears\"},[3,0.011770934,0.011783278,0.001145479,0.009125548,0.000086837469448394]],[{\"name\":\"WebTransaction/NormalizedUri/*\",\"scope\":\"WebTransaction/NormalizedUri/*\"},[3,0.002782043,0.002782043,0.000574017,0.001229419,0.0000027986382542990008]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T16:57:34.869Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T16:57:35.125Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T16:57:35.125Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T16:57:35.125Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T16:57:35.125Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling analytic_event_data on collector API with: [1499330255,[[{\"webDuration\":0.003,\"timestamp\":1411750616845,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750617747,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750623642,\"name\":\"WebTransaction/Expressjs/GET//bears\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.012,\"timestamp\":1411750629867,\"name\":\"WebTransaction/Expressjs/POST//bears\",\"duration\":0.012,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750631042,\"name\":\"WebTransaction/Expressjs/POST//bears\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750631833,\"name\":\"WebTransaction/Expressjs/POST//bears\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750637161,\"name\":\"WebTransaction/NormalizedUri/*\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.001,\"timestamp\":1411750641858,\"name\":\"WebTransaction/NormalizedUri/*\",\"duration\":0.001,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.001,\"timestamp\":1411750642810,\"name\":\"WebTransaction/NormalizedUri/*\",\"duration\":0.001,\"type\":\"Transaction\"},{},{}]]]","time":"2014-09-26T16:57:35.126Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,[[{\"webDuration\":0.003,\"timestamp\":1411750616845,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750617747,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750623642,\"name\":\"WebTransaction/Expressjs/GET//bears\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.012,\"timestamp\":1411750629867,\"name\":\"WebTransaction/Expressjs/POST//bears\",\"duration\":0.012,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750631042,\"name\":\"WebTransaction/Expressjs/POST//bears\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750631833,\"name\":\"WebTransaction/Expressjs/POST//bears\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750637161,\"name\":\"WebTransaction/NormalizedUri/*\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.001,\"timestamp\":1411750641858,\"name\":\"WebTransaction/NormalizedUri/*\",\"duration\":0.001,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.001,\"timestamp\":1411750642810,\"name\":\"WebTransaction/NormalizedUri/*\",\"duration\":0.001,\"type\":\"Transaction\"},{},{}]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=analytic_event_data&run_id=1499330255","time":"2014-09-26T16:57:35.126Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for analytic_event_data.","time":"2014-09-26T16:57:35.373Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":null},"msg":"Deserialized from collector:","time":"2014-09-26T16:57:35.374Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:57:36.482Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:57:36.483Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:57:36.486Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:57:37.682Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:57:37.682Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:57:37.685Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:57:38.539Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:57:38.539Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:57:38.542Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:57:39.346Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:57:39.347Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:57:39.349Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:58:12.634Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:58:12.634Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:58:12.639Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:58:13.417Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:58:13.417Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:58:13.432Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:58:16.754Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB fridays.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:58:16.754Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:58:16.755Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:58:18.114Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB fridays.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:58:18.114Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:58:18.115Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:58:18.957Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB fridays.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:58:18.957Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:58:18.959Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:58:23.962Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB fridays.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:58:23.962Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB fridays.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:58:23.962Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750654.869,1411750714.869,[[{\"name\":\"WebTransaction\"},[10,0.03909256800000001,0.008993935187500001,0.001056103,0.014600682000000002,0.0002931890782300281]],[{\"name\":\"HttpDispatcher\"},[10,0.03909256800000001,0.008993935187500001,0.001056103,0.014600682000000002,0.0002931890782300281]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[6,0.032642031,0.004993837640625001,0.002738393,0.014600682000000002,0.00028231695460023107]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[6,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[10,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[6,0.030274648,0.03028805,0.0023504330000000003,0.014137834,0.00025541115836766803]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Datastore/allWeb\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Datastore/all\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Memory/Physical\"},[12,563.796875,563.796875,46.10546875,47.7265625,26493.423614501953]],[{\"name\":\"Events/wait\"},[4,0.005062617,0.005062617,0.001163422,0.001372321,0.000006439060685150999]],[{\"name\":\"WebTransaction/Expressjs/GET//test\"},[4,0.006450537,0.0040000975468749995,0.001056103,0.001957046,0.000010872123629797]],[{\"name\":\"Apdex/Expressjs/GET//test\"},[4,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\"},[4,0.004389456,0.004400086,0.000769125,0.001261752,0.00000497108875113]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.032642031,0.004993837640625001,0.002738393,0.014600682000000002,0.00028231695460023107]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.030274648,0.03028805,0.0023504330000000003,0.014137834,0.00025541115836766803]],[{\"name\":\"WebTransaction/Expressjs/GET//test\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[4,0.006450537,0.0040000975468749995,0.001056103,0.001957046,0.000010872123629797]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[4,0.004389456,0.004400086,0.000769125,0.001261752,0.00000497108875113]]]]","time":"2014-09-26T16:58:34.870Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750654.869,1411750714.869,[[{\"name\":\"WebTransaction\"},[10,0.03909256800000001,0.008993935187500001,0.001056103,0.014600682000000002,0.0002931890782300281]],[{\"name\":\"HttpDispatcher\"},[10,0.03909256800000001,0.008993935187500001,0.001056103,0.014600682000000002,0.0002931890782300281]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[6,0.032642031,0.004993837640625001,0.002738393,0.014600682000000002,0.00028231695460023107]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[6,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[10,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[6,0.030274648,0.03028805,0.0023504330000000003,0.014137834,0.00025541115836766803]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Datastore/allWeb\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Datastore/all\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[10,0.034664104,0.034688135999999994,0.000769125,0.014137834,0.00026038224711879806]],[{\"name\":\"Memory/Physical\"},[12,563.796875,563.796875,46.10546875,47.7265625,26493.423614501953]],[{\"name\":\"Events/wait\"},[4,0.005062617,0.005062617,0.001163422,0.001372321,0.000006439060685150999]],[{\"name\":\"WebTransaction/Expressjs/GET//test\"},[4,0.006450537,0.0040000975468749995,0.001056103,0.001957046,0.000010872123629797]],[{\"name\":\"Apdex/Expressjs/GET//test\"},[4,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\"},[4,0.004389456,0.004400086,0.000769125,0.001261752,0.00000497108875113]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.032642031,0.004993837640625001,0.002738393,0.014600682000000002,0.00028231695460023107]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[6,0.030274648,0.03028805,0.0023504330000000003,0.014137834,0.00025541115836766803]],[{\"name\":\"WebTransaction/Expressjs/GET//test\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[4,0.006450537,0.0040000975468749995,0.001056103,0.001957046,0.000010872123629797]],[{\"name\":\"Datastore/statement/MongoDB/fridays/find\",\"scope\":\"WebTransaction/Expressjs/GET//test\"},[4,0.004389456,0.004400086,0.000769125,0.001261752,0.00000497108875113]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T16:58:34.870Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T16:58:35.143Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T16:58:35.144Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T16:58:35.144Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T16:58:35.144Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling analytic_event_data on collector API with: [1499330255,[[{\"webDuration\":0.004,\"timestamp\":1411750656482,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.004,\"timestamp\":1411750657681,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750658539,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750659346,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.006,\"timestamp\":1411750692632,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.006,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.014,\"timestamp\":1411750693417,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.014,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750696753,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750698113,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750698956,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.001,\"timestamp\":1411750703961,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.001,\"type\":\"Transaction\"},{},{}]]]","time":"2014-09-26T16:58:35.144Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,[[{\"webDuration\":0.004,\"timestamp\":1411750656482,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.004,\"timestamp\":1411750657681,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.004,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750658539,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750659346,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.006,\"timestamp\":1411750692632,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.006,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.014,\"timestamp\":1411750693417,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.014,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750696753,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750698113,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.002,\"timestamp\":1411750698956,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.002,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.001,\"timestamp\":1411750703961,\"name\":\"WebTransaction/Expressjs/GET//test\",\"duration\":0.001,\"type\":\"Transaction\"},{},{}]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=analytic_event_data&run_id=1499330255","time":"2014-09-26T16:58:35.145Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for analytic_event_data.","time":"2014-09-26T16:58:35.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":null},"msg":"Deserialized from collector:","time":"2014-09-26T16:58:35.399Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:59:22.817Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:59:22.817Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:59:22.819Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:59:23.968Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:59:23.969Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:59:23.971Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}).","time":"2014-09-26T16:59:24.721Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Not tracing MongoDB records.nextObject({}); MongoDB segment already in progress.","time":"2014-09-26T16:59:24.721Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mongodb","level":10,"msg":"Tracing MongoDB records.function (callback) {\n  var self = this;\n\n  if(!callback) {\n    throw new Error('callback is mandatory');\n  }\n\n  if(this.tailable) {\n    callback(new Error(\"Tailable cursor cannot be converted to array\"), null);\n  } else if(this.state != Cursor.CLOSED) {\n    // return toArrayExhaust(self, callback);\n    // If we are using exhaust we can't use the quick fire method\n    if(self.exhaust) return toArrayExhaust(self, callback);\n    // Quick fire using trampoline to avoid nextTick\n    self.nextObject({noReturn: true}, function(err, result) {\n      if(err) return callback(utils.toError(err), null);\n      if(self.cursorId.toString() == \"0\") {\n        self.state = Cursor.CLOSED;\n        return callback(null, self.items);\n      }\n\n      // Let's issue getMores until we have no more records waiting\n      getAllByGetMore(self, function(err, done) {\n        self.state = Cursor.CLOSED;\n        if(err) return callback(utils.toError(err), null);\n        // Let's release the internal list\n        var items = self.items;        \n        self.items = null;\n        // Return all the items\n        callback(null, items);\n      });\n    })\n\n  } else {\n    callback(new Error(\"Cursor is closed\"), null);\n  }\n}({}) ended.","time":"2014-09-26T16:59:24.723Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750714.869,1411750774.877,[[{\"name\":\"Memory/Physical\"},[12,559.2578125,559.2578125,46.5859375,46.6796875,26064.12222290039]],[{\"name\":\"Events/wait\"},[4,0.005276152,0.005276152,0.0012274369999999998,0.001584366,0.000007053353325326]],[{\"name\":\"WebTransaction\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"HttpDispatcher\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/allWeb\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/all\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]]]]","time":"2014-09-26T16:59:34.878Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750714.869,1411750774.877,[[{\"name\":\"Memory/Physical\"},[12,559.2578125,559.2578125,46.5859375,46.6796875,26064.12222290039]],[{\"name\":\"Events/wait\"},[4,0.005276152,0.005276152,0.0012274369999999998,0.001584366,0.000007053353325326]],[{\"name\":\"WebTransaction\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"HttpDispatcher\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"WebTransaction/Expressjs/GET//data\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"Apdex/Expressjs/GET//data\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"Apdex\"},[3,0,0,0.1,0.1,0]],[{\"name\":\"Datastore/statement/MongoDB/records/find\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/operation/MongoDB/find\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/allWeb\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/all\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"Datastore/instance/MongoDB/localhost:27017\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]],[{\"name\":\"WebTransaction/Expressjs/GET//data\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[3,0.007949972,0.0029997766874999996,0.002277539,0.002931524,0.000021293599005377998]],[{\"name\":\"Datastore/statement/MongoDB/records/find\",\"scope\":\"WebTransaction/Expressjs/GET//data\"},[3,0.007040566,0.007046872000000001,0.002004104,0.0026292399999999997,0.0000167240535777]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T16:59:34.878Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T16:59:35.146Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T16:59:35.146Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T16:59:35.146Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T16:59:35.146Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling analytic_event_data on collector API with: [1499330255,[[{\"webDuration\":0.003,\"timestamp\":1411750762816,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750763968,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750764720,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}]]]","time":"2014-09-26T16:59:35.146Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,[[{\"webDuration\":0.003,\"timestamp\":1411750762816,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750763968,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}],[{\"webDuration\":0.003,\"timestamp\":1411750764720,\"name\":\"WebTransaction/Expressjs/GET//data\",\"duration\":0.003,\"type\":\"Transaction\"},{},{}]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=analytic_event_data&run_id=1499330255","time":"2014-09-26T16:59:35.146Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for analytic_event_data.","time":"2014-09-26T16:59:35.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":null},"msg":"Deserialized from collector:","time":"2014-09-26T16:59:35.398Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750774.877,1411750834.877,[[{\"name\":\"Memory/Physical\"},[12,561.984375,561.984375,46.83203125,46.83203125,26318.86981201172]],[{\"name\":\"Events/wait\"},[4,0.005045924,0.005045924,0.001225381,0.001293015,0.0000063677088999780006]]]]","time":"2014-09-26T17:00:34.877Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750774.877,1411750834.877,[[{\"name\":\"Memory/Physical\"},[12,561.984375,561.984375,46.83203125,46.83203125,26318.86981201172]],[{\"name\":\"Events/wait\"},[4,0.005045924,0.005045924,0.001225381,0.001293015,0.0000063677088999780006]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:00:34.877Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:00:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:00:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:00:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:00:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750834.877,1411750894.8830001,[[{\"name\":\"Memory/Physical\"},[12,565.84375,565.84375,47.15234375,47.16015625,26681.59588623047]],[{\"name\":\"Events/wait\"},[4,0.004987826000000001,0.004987826000000001,0.001170013,0.001345658,0.000006235600548869999]]]]","time":"2014-09-26T17:01:34.883Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750834.877,1411750894.8830001,[[{\"name\":\"Memory/Physical\"},[12,565.84375,565.84375,47.15234375,47.16015625,26681.59588623047]],[{\"name\":\"Events/wait\"},[4,0.004987826000000001,0.004987826000000001,0.001170013,0.001345658,0.000006235600548869999]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:01:34.883Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:01:35.141Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:01:35.141Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:01:35.141Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:01:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750894.8830001,1411750954.881,[[{\"name\":\"Memory/Physical\"},[12,569.46484375,569.46484375,47.453125,47.45703125,27024.18406677246]],[{\"name\":\"Events/wait\"},[4,0.005148321,0.005148321,0.0012425379999999998,0.001330185,0.0000066318107973690004]]]]","time":"2014-09-26T17:02:34.882Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750894.8830001,1411750954.881,[[{\"name\":\"Memory/Physical\"},[12,569.46484375,569.46484375,47.453125,47.45703125,27024.18406677246]],[{\"name\":\"Events/wait\"},[4,0.005148321,0.005148321,0.0012425379999999998,0.001330185,0.0000066318107973690004]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:02:34.882Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:02:35.149Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:02:35.149Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:02:35.149Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:02:35.149Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411750954.881,1411751014.886,[[{\"name\":\"Memory/Physical\"},[12,573.5859375,573.5859375,47.796875,47.8046875,27416.735778808594]],[{\"name\":\"Events/wait\"},[4,0.005109417,0.005109417,0.00119662,0.0013651450000000001,0.000006540847146027001]]]]","time":"2014-09-26T17:03:34.887Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411750954.881,1411751014.886,[[{\"name\":\"Memory/Physical\"},[12,573.5859375,573.5859375,47.796875,47.8046875,27416.735778808594]],[{\"name\":\"Events/wait\"},[4,0.005109417,0.005109417,0.00119662,0.0013651450000000001,0.000006540847146027001]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:03:34.887Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:03:35.144Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:03:35.144Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:03:35.145Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:03:35.145Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751014.886,1411751074.886,[[{\"name\":\"Memory/Physical\"},[12,577.921875,577.921875,48.16015625,48.16015625,27832.80780029297]],[{\"name\":\"Events/wait\"},[4,0.005025125,0.005025125,0.001184335,0.001332391,0.000006325919295547]]]]","time":"2014-09-26T17:04:34.886Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751014.886,1411751074.886,[[{\"name\":\"Memory/Physical\"},[12,577.921875,577.921875,48.16015625,48.16015625,27832.80780029297]],[{\"name\":\"Events/wait\"},[4,0.005025125,0.005025125,0.001184335,0.001332391,0.000006325919295547]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:04:34.886Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:04:35.155Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:04:35.155Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:04:35.155Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:04:35.155Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751074.886,1411751134.891,[[{\"name\":\"Memory/Physical\"},[12,579.3984375,579.3984375,48.2734375,48.29296875,27975.21337890625]],[{\"name\":\"Events/wait\"},[4,0.004581443,0.004581443,0.000826759,0.001277769,0.000005385998398215]]]]","time":"2014-09-26T17:05:34.891Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751074.886,1411751134.891,[[{\"name\":\"Memory/Physical\"},[12,579.3984375,579.3984375,48.2734375,48.29296875,27975.21337890625]],[{\"name\":\"Events/wait\"},[4,0.004581443,0.004581443,0.000826759,0.001277769,0.000005385998398215]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:05:34.891Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:05:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:05:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:05:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:05:35.142Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751134.891,1411751228.482,[[{\"name\":\"Memory/Physical\"},[12,583.7109375,583.7109375,48.6328125,48.64453125,28393.205108642578]],[{\"name\":\"Events/wait\"},[4,0.006304405000000001,0.006304405000000001,0.0011898120000000002,0.0025663070000000003,0.000011250559580579003]]]]","time":"2014-09-26T17:07:08.483Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751134.891,1411751228.482,[[{\"name\":\"Memory/Physical\"},[12,583.7109375,583.7109375,48.6328125,48.64453125,28393.205108642578]],[{\"name\":\"Events/wait\"},[4,0.006304405000000001,0.006304405000000001,0.0011898120000000002,0.0025663070000000003,0.000011250559580579003]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:07:08.483Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:07:08.751Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:07:08.751Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:07:08.752Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:07:08.752Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751228.482,1411751288.488,[[{\"name\":\"Memory/Physical\"},[12,587.953125,587.953125,48.99609375,48.99609375,28807.40643310547]],[{\"name\":\"Events/wait\"},[4,0.005285270000000001,0.005285270000000001,0.0012576020000000002,0.001421909,0.000007000879980786001]]]]","time":"2014-09-26T17:08:08.488Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751228.482,1411751288.488,[[{\"name\":\"Memory/Physical\"},[12,587.953125,587.953125,48.99609375,48.99609375,28807.40643310547]],[{\"name\":\"Events/wait\"},[4,0.005285270000000001,0.005285270000000001,0.0012576020000000002,0.001421909,0.000007000879980786001]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:08:08.488Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:08:09.012Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:08:09.012Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:08:09.012Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:08:09.012Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751288.488,1411751348.486,[[{\"name\":\"Memory/Physical\"},[12,592.125,592.125,49.34375,49.34375,29217.66796875]],[{\"name\":\"Events/wait\"},[4,0.005108789000000001,0.005108789000000001,0.001141942,0.0013640890000000002,0.0000065524516363450014]]]]","time":"2014-09-26T17:09:08.486Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751288.488,1411751348.486,[[{\"name\":\"Memory/Physical\"},[12,592.125,592.125,49.34375,49.34375,29217.66796875]],[{\"name\":\"Events/wait\"},[4,0.005108789000000001,0.005108789000000001,0.001141942,0.0013640890000000002,0.0000065524516363450014]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:09:08.487Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:09:08.754Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:09:08.754Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:09:08.754Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:09:08.754Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751348.486,1411751408.493,[[{\"name\":\"Memory/Physical\"},[12,597.51953125,597.51953125,49.79296875,49.796875,29752.465866088867]],[{\"name\":\"Events/wait\"},[4,0.00517634,0.00517634,0.001209818,0.001391375,0.000006715788460566001]]]]","time":"2014-09-26T17:10:08.493Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751348.486,1411751408.493,[[{\"name\":\"Memory/Physical\"},[12,597.51953125,597.51953125,49.79296875,49.796875,29752.465866088867]],[{\"name\":\"Events/wait\"},[4,0.00517634,0.00517634,0.001209818,0.001391375,0.000006715788460566001]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:10:08.493Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:10:08.752Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:10:08.752Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:10:08.752Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:10:08.752Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751408.493,1411751468.493,[[{\"name\":\"Memory/Physical\"},[12,602.390625,602.390625,50.19921875,50.19921875,30239.53875732422]],[{\"name\":\"Events/wait\"},[4,0.005477461,0.005477461,0.0013125230000000001,0.0014634020000000001,0.0000075135949308310016]]]]","time":"2014-09-26T17:11:08.493Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751408.493,1411751468.493,[[{\"name\":\"Memory/Physical\"},[12,602.390625,602.390625,50.19921875,50.19921875,30239.53875732422]],[{\"name\":\"Events/wait\"},[4,0.005477461,0.005477461,0.0013125230000000001,0.0014634020000000001,0.0000075135949308310016]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:11:08.493Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:11:08.760Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:11:08.760Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:11:08.760Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:11:08.761Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751468.493,1411751528.4980001,[[{\"name\":\"Memory/Physical\"},[12,606.65625,606.65625,50.5546875,50.5546875,30669.317138671875]],[{\"name\":\"Events/wait\"},[4,0.005281101,0.005281101,0.0011714100000000001,0.001470968,0.000007018300604249001]]]]","time":"2014-09-26T17:12:08.498Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751468.493,1411751528.4980001,[[{\"name\":\"Memory/Physical\"},[12,606.65625,606.65625,50.5546875,50.5546875,30669.317138671875]],[{\"name\":\"Events/wait\"},[4,0.005281101,0.005281101,0.0011714100000000001,0.001470968,0.000007018300604249001]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:12:08.498Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:12:08.755Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:12:08.755Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:12:08.755Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:12:08.755Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Calling metric_data on collector API with: [1499330255,1411751528.4980001,1411751588.497,[[{\"name\":\"Memory/Physical\"},[12,610.6875,610.6875,50.890625,50.890625,31078.2685546875]],[{\"name\":\"Events/wait\"},[4,0.00512519,0.00512519,0.0012265870000000001,0.001338331,0.000006573148967444]]]]","time":"2014-09-26T17:13:08.498Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":10,"body":"[1499330255,1411751528.4980001,1411751588.497,[[{\"name\":\"Memory/Physical\"},[12,610.6875,610.6875,50.890625,50.890625,31078.2685546875]],[{\"name\":\"Events/wait\"},[4,0.00512519,0.00512519,0.0012265870000000001,0.001338331,0.000006573148967444]]]]","msg":"Posting to https://collector-111.newrelic.com:443/agent_listener/invoke_raw_method?marshal_format=json&protocol_version=12&license_key=388a69ff95a524d34e15f43d3c34d384457054fb&method=metric_data&run_id=1499330255","time":"2014-09-26T17:13:08.498Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"remote_method_invoke","level":20,"msg":"Finished receiving data back from the collector for metric_data.","time":"2014-09-26T17:13:08.767Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"new_relic_response","level":10,"response":{"return_value":[]},"msg":"Deserialized from collector:","time":"2014-09-26T17:13:08.767Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"component":"mapper","level":20,"msg":"No new metric mappings from server.","time":"2014-09-26T17:13:08.767Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":12965,"level":20,"msg":"No errors to send.","time":"2014-09-26T17:13:08.767Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15353,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T06:23:42.697Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15353,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T06:23:43.739Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15353,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500607399.","time":"2014-09-27T06:23:43.740Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15378,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T06:37:06.554Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15378,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T06:37:11.995Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15378,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500626237.","time":"2014-09-27T06:37:11.996Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15405,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T06:51:51.024Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15405,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T06:51:51.936Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15405,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500647661.","time":"2014-09-27T06:51:51.937Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15750,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T07:02:15.129Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15750,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T07:02:16.099Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15750,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500663683.","time":"2014-09-27T07:02:16.100Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15797,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T07:16:07.748Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15797,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T07:16:10.177Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15797,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500682967.","time":"2014-09-27T07:16:10.178Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15868,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T07:35:57.508Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15871,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T07:36:13.144Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15871,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T07:36:27.957Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15871,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500711778.","time":"2014-09-27T07:36:27.958Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15876,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T07:37:56.653Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15876,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T07:37:58.931Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15876,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500713669.","time":"2014-09-27T07:37:58.932Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15877,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-27T07:38:52.732Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15877,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-27T07:38:56.837Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15877,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1500714823.","time":"2014-09-27T07:38:56.838Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15877,"component":"collector_api","level":50,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"Calling metric_data on New Relic failed unexpectedly. Data will be held until it can be submitted:","time":"2014-09-27T15:11:02.647Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":15877,"level":30,"err":{"message":"getaddrinfo ENOTFOUND","name":"Error","stack":"Error: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)","code":"ENOTFOUND","errno":"ENOTFOUND","syscall":"getaddrinfo"},"msg":"Error on submission to New Relic (data held for redelivery):","time":"2014-09-27T15:11:02.648Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":18806,"level":30,"msg":"Starting New Relic for Node.js connection process.","time":"2014-09-28T03:41:19.117Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":18806,"component":"new_relic_response","level":30,"msg":"Reporting to: https://rpm.newrelic.com/accounts/527930/applications/3926256","time":"2014-09-28T03:41:20.184Z","v":0}
{"name":"newrelic","hostname":"hakimu-mbp","pid":18806,"component":"collector_api","level":30,"msg":"Connected to collector-111.newrelic.com:443 with agent run ID 1502534544.","time":"2014-09-28T03:41:20.185Z","v":0}
